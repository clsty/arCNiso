#+title: Arch Linux 安装提示
#+author: clsty (https://github.com/clsty)
* 序
:PROPERTIES:
:TOC:      :include all :depth 3
:END:
:CONTENTS:
- [[#序][序]]
- [[#与官方指南的对照提示][与官方指南的对照提示]]
  - [[#一准备安装介质][一、准备安装介质]]
  - [[#二初始化-live-环境][二、初始化 Live 环境]]
  - [[#三新系统的部署][三、新系统的部署]]
    - [[#建立硬盘分区][建立硬盘分区]]
  - [[#四新系统的基本环境配置][四、新系统的基本环境配置]]
    - [[#chroot][Chroot]]
    - [[#安装引导程序][安装引导程序]]
  - [[#五新系统的工作环境配置][五、新系统的工作环境配置]]
    - [[#真的要先重启吗][真的要先重启吗]]
- [[#背景知识][背景知识]]
  - [[#对于-linux-新手][对于 Linux 新手]]
  - [[#arch-linux-启动流程][Arch Linux 启动流程]]
:END:

本文（[[https://github.com/clsty/arCNiso/blob/main/docs/Installation_hint.org][在线版地址]]）针对 Arch Linux 中文维基上的安装指南（简称“官方指南”；[[https://wiki.archlinuxcn.org/wiki/Installation_Guide][在线版地址]]）对照式地给出部分提示。

** 声明
1. *本文的适用性：本文同时适用于（官方的）原版 archiso 和（clsty 的）[[https://github.com/clsty/arCNiso][arCNiso]]。*
2. *arCNiso 的适用性：此镜像完全适用于使用官方指南进行安装，但你应当使用 root 身份。为此，你可以使用开机启动时会自动弹出的 konsole。如果你手动打开了一个 konsole（可按 ~Ctrl+Alt+T~ 调出），你应当输入 ~arcnot~ 再按回车[fn::arcnot 其实只是切换到 root 帐户及其家目录，再显示一个欢迎界面。这样，就与原本（original）的终端（terminal）保持了一致。]。*
3. arCNiso 相对于原版 archiso 的优点：arCNiso 不会降低最终要求，但会帮你优化学习路线。这意味着，当你最终完成 Arch Linux 的安装时，你的收获实际上与使用官方 archiso 是一致的。

** 建议
先快速地略读一遍[[https://github.com/clsty/arCNiso/blob/main/docs/learn.org][入门与进阶帮助]]。
这不是必须的，但无疑能让你在之后的安装或使用中更加得心应手。

在安装完成之后，可以再次精读此文。

* 与官方指南的对照提示

为了对整体的“我在做什么”有个框架性的理解，
请将安装一份新的 Arch Linux 的系统的整个流程，理解为存在以下几个阶段：
- 注：既然你正在看这个，你很可能已经到达第 2 阶段了。

1. 准备安装介质：获得一个包含可用的 Live 环境的 U 盘（或移动硬盘等）。
2. 初始化 Live 环境：做一些必要的检查与准备工作（比如联网），确保 Live 环境确实适用于安装新系统。
3. 新系统的部署：准备存储空间，并将新系统安装到这个空间。
4. 新系统的基本环境配置：使得新系统可以被正确地引导、正常地启动。
5. 新系统的工作环境配置：使得新系统具有图形界面等。

以下给出各个阶段的具体对应步骤，以及部分提示。

** 一、准备安装介质
本阶段对应于官方指南的以下步骤（若你使用 arCNiso，请参照 arCNiso 的自述文档即 README 的“获取与运行”）：
- 获取安装映像
- 验证签名
- 准备安装介质

*暂时没有什么要提示的。*

** 二、初始化 Live 环境
本阶段对应于官方指南的以下步骤：
- 启动到 Live 环境
- 控制台键盘布局与字体（arCNiso 不需要）
- 验证引导模式
- 连接到互联网
- 更新系统时间

*暂时没有什么要提示的。*

** 三、新系统的部署
本阶段对应于官方指南的以下步骤：
- 建立硬盘分区
- 格式化分区
- 挂载分区
- 选择镜像（arCNiso 不需要）
- 安装必需的软件包
*** 建立硬盘分区
“如果要启动的磁盘已经有一个EFI系统分区，不要新建 EFI 分区，请使用现有的分区。”这句话是不严谨的，因为：
- 一块硬盘上是可以共存多个 EFI 分区的。
- 若要与 Windows 系统共用 EFI 分区，则当 Windows 系统启动或升级时，可能会覆盖 EFI 分区中 Arch Linux 系统的的引导文件。

另外，请记住在这一阶段中 esp 的挂载点，这在后面安装引导程序时会用到。

** 四、新系统的基本环境配置
本阶段对应于官方指南的以下步骤：
- Fstab
- Chroot
- 时区
- 本地化
- 网络配置
- Initramfs
- Root 密码
- 安装引导程序
- （提前）安装后的工作（这里是本文与官方指南的不同之处。见后面的“[[#真的要先重启吗][真的要先重启吗]]”）
- 重启（ *按照指南，到这里才退出 chroot* ）
*** Chroot
注意：
- 在整个 chroot 到新系统的过程中， *直到你退出 chroot 之前* ，都应当记住 chroot 是变换（change）根目录（root）。
  - 比如你的新系统位于 =/mnt= ，那么在 chroot 之后，你的 =/= 实际上变成了外部的 =/mnt= ，整个目录树也都是这样对应地变化的。
  - 比如在“安装引导程序”中安装 GRUB 时，WiKi 中的“把 esp 替换成 ESP 分区挂载点”的 ESP 的挂载点，与你之前“挂载分区”中的在本质上是相同的，但是，在形式上应当对应地变换路径：
    例如，假如之前你将 ESP 分区挂载到了 =/mnt/boot= ，则你的 ESP 挂载点应当写为 =/boot= 。
- arch-chroot 本质上也是 chroot，只是预先做了一点其他准备。
*** 安装引导程序
新手建议使用 GRUB。
步骤参见 [[https://wiki.archlinuxcn.org/wiki/GRUB#安装][GRUB]] 即可。

不过，如果你想了解得更深一点，比如 UEFI 与 GPT 的情形下为什么要指定 esp，boot 分区又是什么，等等，那么：
- 请先阅读本文中的“[[#arch-linux-启动流程][Arch Linux 启动流程]]”一节。

在此基础上：
- 可见，GRUB 是“分体式”的，自然要同时指定 esp 与 boot 分区。

这也是为什么 esp 的文件系统要被限定为 fat32——因为它是供 UEFI 使用的，而 UEFI 作为主板自带的固件，能力自然是有限的（越是底层的部件，就越强调稳定性，这在一定程度上与功能的丰富性互斥），只支持这样的 esp。

** 五、新系统的工作环境配置
本阶段对应于官方指南的以下步骤：
- 安装后的工作

*** 真的要先重启吗
官方指南是让你先重启电脑，直接启动（几乎什么也没配置的）新系统，再进行这一阶段的工作。

- 这个重启的意义主要在于验证你的系统引导是否配置正确。
- 问题是，由于刚才几乎什么也没配置，现在的这个新系统只是能启动，并且有个 tty；但是图形界面是没有的，鼠标是不支持的，字体是花白粗糙的，中文是用方块显示的，甚至可能还无法联网。

现在，我们给出一种新的可能性：
假如你的 Live 环境“体验尚可”（比如你使用的是 arCNiso），
那么如果你能在 chroot 中先完成这些工作，
重启之后你就可以无缝衔接到的同样“体验尚可”的工作环境中，
而不必在简陋的 tty 环境中摸索一段时间。
#+begin_quote
鉴于新手总是在系统引导上面翻车，官方指南的“先检验系统引导”的安排当然是合理的，否则若你费了很大力气在 chroot 里面终于把环境配好了，却发现系统根本启动不了，自己又不明白出了什么问题只好从头装起，那岂不是白白浪费时间。
#+end_quote
显然， *以下两种情况* 就可以忽略官方指南的顺序安排，而是采用这里所说的顺序（先在 chroot 装好环境，然后再重启）：
- 你是一个对配置引导已经具有一定经验、不太可能翻车的熟手。
- 你在这个阶段并没有花费什么时间与精力，比如你使用了某种自动化工具。
#+begin_quote
- archinstall：那么这个自动化工具……
- [[https://github.com/clsty/ulerm][ulerm]]：没错，正是在下。

注：目前，新手不建议使用 archinstall，主要原因之一是用它安装的 Arch Linux 和与正常途径安装的可能会有一些差别，而这些差别可能在日后导致问题。
#+end_quote

* 背景知识
** Arch Linux 启动流程
这里以目前最常见的 UEFI、GPT、GRUB 与 amd64 的组合为例，以通俗（但不严谨）的语言，简单概括一下启动流程（详细资料参见 [[https://wiki.archlinuxcn.org/wiki/Arch_boot_process][ArchWiki]]）。

先用一句话总括：
先启动主板（UEFI），再（通过 esp 来）启动 GRUB，最后启动 Linux 内核。

1. *主板：* 当你按下开机键时，电脑的主板收到开机信号，于是让电源工作起来，再做一些自我检查，最后启动自身附带的 UEFI。
2. *UEFI：* UEFI 会识别显示屏、鼠标、硬盘等硬件，并让它们可以工作，再扫描各个硬盘上的 EFI 分区（即 esp），启动其中的 =/EFI/GRUB/grubx64.efi= 文件，即 GRUB 的 EFI 二进制文件。
3. *GRUB(EFI)：* GRUB 的 EFI 二进制文件并不是完全体，而是只能按照设定好的程序，用指定方法，在指定的文件系统中找到自己的本体并且运行本体。
   - 原因：由于 esp 严格限定文件系统，并且 EFI 二进制文件格式本身也能力有限，想要在这里放下一个完整的引导程序（比如 EFISTUB）不是不行，但功能上就较为简陋了。所以，一般都是在此处放一个“传送门”来启动更强大的本体，GRUB 就属于这种情况。
   - 注：之后在 Linux 运行期间，一般会把 GRUB 本体所在的这个文件系统挂载到 =/boot= ，所以我们一般把它叫作 boot 分区；但是请你明白，在 GRUB 运行期间，连 Linux 的 =/= 都没有出现，当然也并不存在 =/boot= 。
4. *GRUB(BOOT)：* 现在，你启动了 boot 分区中的 GRUB 的本体——它是目前最强大的启动引导器（Bootloader），足以完成很多目标。于是你使用它选择了某个启动条目（通常是第一个），它根据条目信息，找到并加载了 Linux 内核（通常与 GRUB 放在一起，也在 =/boot= 里面）。
5. *Linux 内核：* Linux 内核启动。它虚拟出了一个“目录树”，根据 GRUB 提供的信息，把指定的文件系统挂载到根目录 =/= 上。然后，再根据 =/etc/fstab= 的信息，把指定的其他文件系统挂载到指定位置（比如它可以把 esp 挂载到 =/boot/efi= 或者 =/efi= ）。
   - 注：即使不挂载 esp 也不会影响 Linux 的运行，但在安装与升级 GRUB 时这是必须的；至于 =/boot= 则通常是 Linux 内核及部分模块的所在，所以是必须挂载的（除非它与 =/= 是同一文件系统）。
6. *Linux：* 之后会启动 Getty，Getty 可能会启动登录管理器（即 LM 或 DM），也可能启动 tty，供用户登录。如果桌面环境已经安装好，它将在这之后启动。
